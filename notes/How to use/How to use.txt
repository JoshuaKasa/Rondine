- WHAT IS JOSH_MENU() AND HOW TO USE IT -

josh_menu() is a debugging tool easy to use and fully customaziable.
You can open the menu by pressing the right mouse button anywhere on the screen, pressing the right mouse button.
For selecting an instance press the right mouse button while hovering it.
For selecting an option press the left mouse button on the option you want.
When objects or variables are too many you can scroll them with the mouse wheel.
You can change the placeholder sprite by going 'josh_menu' -> 'Create event' -> 'Line 75'.
Remember that for using the menu you need to have at least 1 object inside the room.

-  HOW TO CUSTOMIZE FONT AND COLORS -

For changing the font/color of anything you can go to the object 'josh_menu' -> 'Create event' -> 'Line 73'
there you can find each option of the menu (and you can then change it).


- HOW TO ADD AN OPTION -

For adding a option to the menu you need to go to 'josh_menu' -> 'Create event' -> 'Line 22'
the array 'options' has every option of the menu (Create, Destroy, ecc...), add a new entry to the array (a string).
That will be the name of your option, and you can then setting the use of it by going to 'josh_menu' -> 'Draw GUI event' -> 'Line 74 - 109'.

You'll need to set another 'case' statement ex: 

- Create event:
options = ["Inspect", "Delete", "Create", "Copy","Paste", "Variable", "Back", "New option"];

- Draw GUI event:
switch (cursor)
{
	...
		break;
		
	case (option number in the array, 7 in this case):
	{
		What you want to happen goes in here
	}
		break;
}

Keep in mind that inside the 'switch' statement you must put only options related for a selected instance.
Let's say you want to make an option that make the selected instance 1 time bigger, you would do this:

- Create event:
options = ["Inspect", "Delete", "Create", "Copy","Paste", "Variable", "Back", "+1 Size"];

- Draw GUI event:
switch (cursor)
{
	...
		break;
		
	case 7:
	{
		Method 1:
		instance.image_xscale += 0.1;
		instance.image_yscale += 0.1;
		
		Method 2:
		with (instance)
		{
			image_xscale += 0.1;
			image_yscale += 0.1;
		}
	}
		break;
}

But if you want to make a option that shows the fps then you would do something like this:

- Create event:
options = ["Inspect", "Delete", "Create", "Copy","Paste", "Variable", "Back", "FPS On/Off"];

- Draw GUI event:

- Line 72...;
if (cursor == 7) then show_debug_overlay(true);

- Line 111...;
else if (instance == noone && cursor != 6 && cursor != 2 && cursor != 7) then show_message("No object selected");

This would add an option which shows the debug overlay when selected.


- HOW TO CUSTOMIZE ERRORS -

- Create event:

- Line 28:
errors = ["No object selected", "Selected object has no variables"];
Here you can customize the shown errors, you can write whatever you want, for customizing the error position or style there are 2 ways.

- Customizing style:
For customizing the style, you need to go to the 'josh_menu_function' -> 'Line 14' from there you will find the 'draw_error' function.
Inside of it you will find everything you need to for customizing the appearence of the error box.

- Customizing error position:
For customizing the error position, you need to go to 'josh_meu' -> 'Draw GUI' -> 'Line 458' there you will find everything about the error position
and the text that is displayed.
For example you can make the error wave with the 'wave' function, for ex:

- Line 462:
var osc = oscillate(-5,5, 2, 0);	
draw_error(room_width/2 - message_width/2 + wave_,room_height/2 - 50, message_width + osc,100, errors[error]);	

This will make the x of the error go from left to right in 2 seconds.


- VARIABLES USE -

- Customization variables:
font -> Font of the menu
box_color -> Color of the rectangles
text_color -> Color of the text
text_selected_color -> Color of the text when hovered with mouse
text_selected_box_color -> Color of the rectangle that appears when hovering text

- Options variables:
drawing -> Weather the menu is showing or not
options -> The options of the menu (array)
instance -> The instance id of the instance selected by the user